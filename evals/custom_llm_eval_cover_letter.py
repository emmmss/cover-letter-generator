import os
import json
import sys

# Get the directory of the current script
current_script_dir = os.path.dirname(os.path.abspath(__file__))
# Calculate project root
project_root = os.path.abspath(os.path.join(current_script_dir, '..'))

# Add the project root to sys.path
if project_root not in sys.path:
    sys.path.insert(0, project_root)

from app.services.bedrock_client import converse_with_bedrock

GRADING_MODEL_ID = os.getenv("BEDROCK_GRADING_MODEL_ID", "anthropic.claude-3-5-sonnet-20240620-v1:0")


def llm_eval_cover_letter(generated_letter: str, cv_text: str, job_description: str,
                          past_letter_text: str = "", example_texts: str = ""): # Added example_texts
    """
    Evaluates a generated cover letter using an LLM on AWS Bedrock based on specific criteria.

    Args:
        generated_letter (str): The cover letter generated by the system.
        cv_text (str): The candidate's CV text.
        job_description (str): The job description.
        past_letter_text (str): Previous cover letters provided as additional factual context.
        example_texts (str): Other example texts about the candidate's experience.

    Returns:
        tuple: (average_score, full_evaluation_response_json_string)
    """
    # Combine past_letter_text and example_texts for the grader's context
    additional_candidate_info = ""
    if past_letter_text:
        additional_candidate_info += f"Previous Cover Letters:\n{past_letter_text}\n\n"
    if example_texts:
        additional_candidate_info += f"Additional Candidate Information (Examples):\n{example_texts}\n\n"

    # The detailed rubric for the grader LLM
    # Updated instruction to consider all provided factual sources.
    grading_prompt_content = f"""
    You are an expert HR recruiter evaluating cover letters for job applications.
    Your task is to critically assess the following cover letter based on the provided CV, Job Description, AND any provided additional candidate information (e.g., past cover letters, other example texts).
    Assign a score from 1 to 5 for each criterion, where 1 is poor and 5 is excellent.
    Also, provide a detailed explanation for your scores.

    ---
    **Evaluation Criteria:**

    1.  **Relevance to Job Description (1-5):**
        -   **1:** Letter is generic or misses key aspects of the job description.
        -   **3:** Some relevance, but could be more specific or misses opportunities to align with the job.
        -   **5:** Highly customized, directly addressing job description's key requirements, skills, and company values, making a strong case for the candidate's fit.

    2.  **Highlighting Candidate's Strengths/CV (1-5):**
        -   **1:** The letter simply reiterates the CV or fails to connect the candidate's experience to the job's needs.
        -   **3:** The letter mentions some relevant points from the CV but doesn't elaborate or connect them strongly to the job description.
        -   **5:** The letter strategically pulls key achievements and skills from the CV, framing them in a way that directly responds to the job description and positions the candidate strongly.

    3.  **Professionalism and Tone (1-5):**
        -   **1:** The tone is informal, unprofessional, or contains significant grammatical errors, typos, or awkward phrasing.
        -   **3:** The tone is generally professional but might have minor errors, some clich√©s, or a slightly unconvincing voice.
        -   **5:** The letter maintains a consistently professional, confident, and engaging tone. It's articulate, persuasive, and grammatically impeccable.

    4.  **Conciseness and Flow (1-5):**
        -   **1:** The letter is overly long, repetitive, or poorly structured, making it hard to follow.
        -   **3:** The letter is reasonably concise but could be tightened in places, or its flow is occasionally disrupted.
        -   **5:** The letter is succinct, impactful, and flows seamlessly from one point to the next, making a compelling case without unnecessary words.

    5.  **Call to Action/Engagement (1-5):**
        -   **1:** The letter ends abruptly or lacks a clear, professional closing.
        -   **3:** The closing is acceptable but could be more engaging or direct in its call to action.
        -   **5:** The letter concludes with a strong, professional call to action that subtly reinforces the candidate's interest and suitability.

    6.  **Factual Accuracy (1-5):**
        -   **Goal:** Does the cover letter strictly adhere to the information provided in the candidate's CV, the job description, **and any additional candidate information (past cover letters, example texts)**, without fabricating or embellishing details not present in these source materials?
        -   **1:** The letter contains significant fabrications, exaggerated claims, or introduces information not found in the CV, job description, or additional candidate information.
        -   **3:** The letter is mostly accurate but includes minor embellishments, slightly misinterprets details, or makes inferences that are not strictly supported by the provided CV or additional candidate information.
        -   **5:** The letter is entirely factual, drawing all claims and details directly from the provided CV, job description, and additional candidate information. It introduces no new, unverified information.

    ---
    **Examples for Clarity:**

    <examples>
    <example>
    <evaluation_summary>
    This cover letter is generic and doesn't tailor the candidate's CV effectively to the job description. It feels like a template with little customization, contains minor grammatical errors, and the call to action is weak. Crucially, it makes a claim about "leading a team of 10 engineers" which is not present in the CV, any past letters, or example texts, indicating hallucination.
    </evaluation_summary>
    <cover_letter>
    Dear Hiring Manager,

    I am writing to express my interest in the Software Engineer position at your company. I have 5 years of experience in software development and am proficient in Python and Java. My resume, attached for your review, further details my qualifications. I also successfully led a team of 10 engineers on a major project.

    I am a highly motivated individual and believe I would be a great asset to your team. I am eager to learn and contribute to your success.

    Thank you for your time and consideration. I look forward to hearing from you soon.

    Sincerely,
    [Candidate Name]
    </cover_letter>
    <scores>
    "relevance": 1,
    "highlighting_strengths": 1,
    "professionalism_tone": 2,
    "conciseness_flow": 3,
    "call_to_action": 2,
    "factual_accuracy": 1 # Score 1 due to the hallucinated claim
    </scores>
    </example>

    <example>
    <evaluation_summary>
    This cover letter is exceptionally well-tailored to the job description, effectively leveraging the candidate's Python and AWS expertise from their CV to directly address the backend role's requirements. The tone is professional and confident, and the letter flows logically with a strong, clear call to action. All claims made are directly verifiable from the provided CV.
    </evaluation_summary>
    <cover_letter>
    Dear [Hiring Manager Name],

    I am writing to express my keen interest in the Senior Backend Software Engineer position at InnovateNow, as advertised on [Platform]. With five years of experience at TechCorp, where I specialized in developing scalable APIs and microservices using Python and AWS, I am confident in my ability to significantly contribute to your team's mission of building robust and highly available systems.

    At TechCorp, I led the development of a critical API service that processed over 1 million requests daily, resulting in a 20% improvement in system efficiency. My expertise extends to Docker and Kubernetes, which I utilized to streamline deployment pipelines and ensure service reliability. I am particularly drawn to InnovateNow's commitment to [mention something specific about the company, if applicable, e.g., innovative cloud solutions or remote-first culture], which aligns perfectly with my professional goals and technical background.

    My proven track record in designing and implementing performant backend solutions, coupled with my proactive approach to problem-solving, makes me an ideal candidate for this role. I am eager to bring my skills to InnovateNow and contribute to your continued success.

    Thank you for your time and consideration. I have attached my CV for your review and welcome the opportunity to discuss how my experience can benefit InnovateNow in an interview.

    Sincerely,
    John Doe
    </cover_letter>
    <scores>
    "relevance": 5,
    "highlighting_strengths": 5,
    "professionalism_tone": 5,
    "conciseness_flow": 5,
    "call_to_action": 5,
    "factual_accuracy": 5 # Score 5 as all information is verifiable
    </scores>
    </example>
    </examples>
    ---
    **Instructions:**
    Provide your scores for each criterion and a general explanation in JSON format.
    You MUST adhere strictly to this JSON format for your response.

    <json>
    {{
    "relevance": <number>,
    "highlighting_strengths": <number>,
    "professionalism_tone": <number>,
    "conciseness_flow": <number>,
    "call_to_action": <number>,
    "factual_accuracy": <number>,
    "explanation": "<string>"
    }}
    </json>

    ---
    <job_description>{job_description}</job_description>
    <candidate_cv>{cv_text}</candidate_cv>
    {f"<additional_candidate_information>{additional_candidate_info}</additional_candidate_information>" if additional_candidate_info else ""} # <-- Combined section
    <cover_letter_to_evaluate>{generated_letter}</cover_letter_to_evaluate>
    """

    messages_for_grader = [
        {
            "role": "user",
            "content": [
                {"text": grading_prompt_content}
            ]
        },
        {"role": "assistant", "content": [{"text": "<json>"}]}
    ]

    try:
        evaluation_raw = converse_with_bedrock(
            messages=messages_for_grader,
            model_id=GRADING_MODEL_ID,
            temperature=0.0,
            max_tokens=1000,
            stop_sequences=["</json>"]
        )

        if "</json>" in evaluation_raw:
            evaluation_raw = evaluation_raw.split("</json>")[0]

        evaluation = json.loads(evaluation_raw)

        numeric_values = [
            value for key, value in evaluation.items()
            if isinstance(value, (int, float)) and key != 'explanation'
        ]
        avg_score = sum(numeric_values) / len(numeric_values) if numeric_values else 0

        return avg_score, json.dumps(evaluation, indent=2)

    except Exception as e:
        print(f"Error during Bedrock LLM evaluation: {e}")
        return 0, f"Error during Bedrock LLM evaluation: {str(e)}"

def get_assert(output: str, context, threshold=4.0):
    """
    Promptfoo assertion function. It calls the custom LLM evaluation and returns the result.
    """
    cv_text = context['vars']['cv_text']
    job_description = context['vars']['job_description']
    # Safely get past_letter_text and example_texts, defaulting to empty strings
    past_letter_text = context['vars'].get('past_letter_text', "")
    example_texts = context['vars'].get('example_texts', "") # <-- Get example_texts

    score, evaluation_reason = llm_eval_cover_letter(output, cv_text, job_description, past_letter_text, example_texts) # <-- Pass example_texts
    return {
        "pass": score >= threshold,
        "score": score,
        "reason": evaluation_reason
    }